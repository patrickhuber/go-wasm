// Code generated by "stringer -type=OpCode"; DO NOT EDIT.

package wasm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unreachable-0]
	_ = x[Nop-1]
	_ = x[End-11]
	_ = x[LocalGet-32]
	_ = x[LocalSet-33]
	_ = x[LocalTee-34]
	_ = x[GlobalGet-35]
	_ = x[GlobalSet-36]
	_ = x[I32Const-65]
	_ = x[I64Const-66]
	_ = x[F32Const-67]
	_ = x[F64Const-68]
	_ = x[I32Clz-103]
	_ = x[I32Ctz-104]
	_ = x[I32PopCnt-105]
	_ = x[I32Add-106]
}

const (
	_OpCode_name_0 = "UnreachableNop"
	_OpCode_name_1 = "End"
	_OpCode_name_2 = "LocalGetLocalSetLocalTeeGlobalGetGlobalSet"
	_OpCode_name_3 = "I32ConstI64ConstF32ConstF64Const"
	_OpCode_name_4 = "I32ClzI32CtzI32PopCntI32Add"
)

var (
	_OpCode_index_0 = [...]uint8{0, 11, 14}
	_OpCode_index_2 = [...]uint8{0, 8, 16, 24, 33, 42}
	_OpCode_index_3 = [...]uint8{0, 8, 16, 24, 32}
	_OpCode_index_4 = [...]uint8{0, 6, 12, 21, 27}
)

func (i OpCode) String() string {
	switch {
	case i <= 1:
		return _OpCode_name_0[_OpCode_index_0[i]:_OpCode_index_0[i+1]]
	case i == 11:
		return _OpCode_name_1
	case 32 <= i && i <= 36:
		i -= 32
		return _OpCode_name_2[_OpCode_index_2[i]:_OpCode_index_2[i+1]]
	case 65 <= i && i <= 68:
		i -= 65
		return _OpCode_name_3[_OpCode_index_3[i]:_OpCode_index_3[i+1]]
	case 103 <= i && i <= 106:
		i -= 103
		return _OpCode_name_4[_OpCode_index_4[i]:_OpCode_index_4[i+1]]
	default:
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
